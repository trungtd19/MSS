@model PagedList.IPagedList<MSS_DEMO.Models.Student_Specification_Log>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Specialization Report";
}
<br />
<span>@Html.ActionLink("Home", "Index", "Home") > Specialization Report</span>
<hr />

@using (Html.BeginForm("DeleteAll", "Student_Specification_Log"))
{
    <p>
        <input type="submit" value="Clear All Data" hidden />
    </p>
}

<div class="panel panel-default">
    <div class="panel-body" style="padding-top: initial;">

        @using (Html.BeginForm("Index", "Student_Specification_Log", FormMethod.Get))
        {
            <div class="form-group">
                <div class="col-md-2">
                    <label class="control-label"> Search by email</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
                    @Html.Hidden("searchCheck", "true")
                </div>
                <div class="col-md-1"></div>
                <div class="col-md-2">
                    <label class="control-label"> Search by date import</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBox("dateImport", ViewBag.DateFilter as string, new { @class = "form-control", @type = "date" })
                </div>
            </div>
            <br /> <br />
            <div class="form-group">
                <div class="col-md-2">
                    <label class="control-label"> Search by </label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownList("SelectString", null, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <input class="btn btn-default" type="submit" value="Search" />
                </div>
            </div>

        }
    </div>
</div>

@if (Model.PageCount != 0)
{
    <div class="table-responsive text-nowrap">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>
                        Email
                    </th>
                    <th>
                        Subject ID
                    </th>
                    <th>
                        Campus
                    </th>
                    <th>
                        Specialization
                    </th>
                    <th>
                        Specialization Slug
                    </th>
                    <th>
                        University
                    </th>
                    <th>
                        Enrollment Time
                    </th>
                    <th>
                        Last Activity Time
                    </th>
                    <th>
                        Completed
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Program Slug
                    </th>
                    <th>
                        Program Name
                    </th>
                    <th>
                        Completion Time
                    </th>

                    <th>
                        Specification ID
                    </th>

                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
                {

                    var complete = item.Completed == true ? "Yes" : "No";
                    var status = item.Status == true ? "Yes" : "No";
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Subject_ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Campus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Specialization)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Specialization_Slug)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.University)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Specialization_Enrollment_Time)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Last_Specialization_Activity_Time)
                        </td>
                        <td>
                            @complete
                        </td>
                        <td>
                            @status
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Program_Slug)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Program_Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Specialization_Completion_Time)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Specification_ID)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    var pagecount = Model.PageCount != 0 ? Model.PageCount : Model.PageCount;
    var pagenumber = Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber;
    <label>Page </label> @pagenumber <label> of </label> @pagecount
}

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter, dateFilter = ViewBag.DateFilter, SelectFilter = ViewBag.SelectString, searchCheck = "true" }))
